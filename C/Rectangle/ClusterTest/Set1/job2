#!/bin/bash -l
## This is the problem size scaling test.
## Default settings to over-solve on the subdomains are used.
## We use a fixed overlap percentage for increasing N.
## We expect to see roughly constant iteration numbers.

## NAMING
#SBATCH -J j2
#SBATCH -p public
#SBATCH -o slurmout2
#SBATCH -e slurmout2

## partition/queue
#SBATCH -p dms-cpu

## EMAIL NOTIFICATION
#SBATCH --mail-user tt73@njit.edu
#SBATCH --mail-type=END
#SBATCH -A tt73

## RUNTIME  HOURS:MIN:SEC and MEMORY
#SBATCH -t 8:0:0
#SBATCH --mem=16G
#SBATCH -N 4

module load gnu8 mpich petsc

rm -f out2

np=4
for N in {100,200,300,400}
do
   printf "N = $N\n" >> out2
   mpiexec -np $np ../../maddm -N $N -problem ex1 >> out2
   mpiexec -np $np ../../maddm -N $N -problem ex2 >> out2
   mpiexec -np $np ../../maddm -N $N -problem ex3 >> out2
   mpiexec -np $np ../../maddm -N $N -problem ex4 >> out2
done